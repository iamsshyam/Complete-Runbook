# Using Cluster IP
apiVersion: v1
kind: Service
metadata:
  name: nginx-service  # Name of the Service
spec:
  selector:
    app: nginx  # This selector matches the pods with the label "app: nginx"
  ports:
    - protocol: TCP
      port: 80       # The port on which the service will be exposed
      targetPort: 80 # The port on the containers that the service will forward traffic to
  type: ClusterIP    # The service type (internal access only within the cluster)

  # Using Nodeport

apiVersion: v1
kind: Service
metadata:
  name: nginx-nodeport-service
spec:
  selector:
    app: nginx
  type: NodePort
  ports:
    - protocol: TCP
      port: 80          # Port accessible within the cluster
      targetPort: 80     # Port the container listens on
      nodePort: 30080    # Fixed port on each node (in the range 30000-32767)

apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment
spec:
  replicas: 3
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
        - name: nginx
          image: nginx:1.7.9
          ports:
            - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-loadbalancer-service
spec:
  selector:
    app: nginx
  type: LoadBalancer
  ports:
    - protocol: TCP
      port: 80          # Port exposed by the load balancer
      targetPort: 80     # Port on the container

---
---
apiVersion: v1
kind: Service
metadata:
  name: webapp-service
  namespace: default
spec:
  ports:
  - nodePort: 30080
    port: 8080
    targetPort: 8080
  selector:
    name: simple-webapp
  type: NodePort